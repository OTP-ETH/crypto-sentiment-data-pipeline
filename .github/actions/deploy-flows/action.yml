name: 'Deploy Flows'
branding:
  icon: cloud
  color: yellow
description: 'Deploy flows to Prefect Cloud and Google Cloud Run'
inputs:
  prefect_api_key:
    description: 'Prefect Cloud API key'
    required: true
  prefect_api_url:
    description: 'Prefect Cloud API URL'
    required: true
  flow_entrypoint:
    description: 'Prefect flow entrypoint e.g. myflow.py:flow_function'
    required: true
  deployment:
    description: 'Prefect deployment name - could reference environment or branch name e.g. dev or prod'
    required: false
    default: "default"
  queue:
    description: 'Prefect queue name'
    required: false
    default: "default"
  github_block_name:
    description: 'Name of the storage block'
    required: false
    default: "github/default"
  cloudrun_block_name:
    description: 'Name of the infrastructure block'
    required: false
    default: "cloud-run-job/default"
  python_version:
    description: 'Python version'
    required: false
    default: "3.10"
  install_command:
    description: 'Can be set to e.g. pip install -r requirements.txt'
    required: false
    default: "pip install ."
  gcp_credentials_json:
    description: 'Content of the Service Account JSON key file'
    required: true
runs:
  using: "composite"
  steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "${{ inputs.python_version }}"
        cache: 'pip'

    - id: install-prefect
      run: |
        pip install prefect
        ${{ inputs.install_command }}
      shell: bash

    - id: login-prefect
      run: |
        prefect config set PREFECT_API_KEY=${{ inputs.prefect_api_key }}
        prefect config set PREFECT_API_URL=${{ inputs.prefect_api_url }}
      shell: bash

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: "${{ inputs.gcp_credentials_json }}"

    - run: |
        prefect deployment build ${{ inputs.flow_entrypoint }} -n ${{ inputs.deployment }} -q ${{ inputs.queue }} \
        -sb "${{ inputs.github_block_name }}" -ib "${{ inputs.cloudrun_block_name }}" --skip-upload -a -v $GITHUB_SHA
      shell: bash

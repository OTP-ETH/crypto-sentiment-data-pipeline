name: "Initial Setup"
on:
  workflow_dispatch:
    inputs:
      region:
        description: GCP region
        required: true
        default: 'us-central1'
        type: string
      zone:
        description: Zone in the selected GCP region
        required: true
        default: 'us-central1-a'
        type: string
      artifact_repository:
        description: Artifact Registry Repository
        required: true
        default: 'binance-transactions'
        type: string
      image_name:
        description: Artifact Container Name
        required: true
        default: 'deployments'
        type: string
      machine_type:
        description: GCP Compute Engine instance type
        required: true
        default: 'e2-micro'
        type: string
      gcp_creds_block_name:
        description: 'GCP Credentials block name'
        required: false
        default: "default"
        type: string
      github_block_name:
        description: 'GitHub block name'
        required: false
        default: "default"
        type: string
      cloudrun_block_name:
        description: 'CloudRunJob block name'
        required: false
        default: "default"
        type: string
      deployment:
        description: 'Prefect deployment name'
        required: false
        default: "default"
        type: string
      queue:
        description: 'Prefect queue name'
        required: false
        default: "default"
        type: string
jobs:
  build-image:
    runs:
      using: "composite"
    steps:
      - id: build-image
      uses: ./.github/actions/build-image
      with:
        prefect_api_key: ${{ inputs.prefect_api_key }}
        prefect_api_url: ${{ inputs.prefect_api_url }}
        artifact_repository: ${{ inputs.artifact_repository }}
        image_name: ${{ inputs.image_name }}
        region: ${{ inputs.region }}
        gcp_credentials_json: ${{ inputs.gcp_credentials_json }}

  deploy-vm:
    runs-on: ubuntu-latest
    needs: build-image
    steps:
      - uses: actions/checkout@v3
      - id: deploy-vm
        uses: ./.github/actions/deploy-vm
        with:
          prefect_api_key: ${{ secrets.PREFECT_API_KEY }}
          prefect_api_url: ${{ secrets.PREFECT_API_URL }}
          artifact_repository: ${{ github.event.inputs.artifact_repository }}
          region: ${{ github.event.inputs.region }}
          zone: ${{ github.event.inputs.zone }}
          machine_type: ${{ github.event.inputs.machine_type }}
          gcp_credentials_json: ${{ secrets.GCP_CREDENTIALS }}

  build-blocks:
    runs-on: ubuntu-latest
    needs: deploy-vm
      - id: create-blocks
        uses: ./.github/actions/create-blocks
        with:
          prefect_api_key: ${{ secrets.PREFECT_API_KEY }}
          prefect_api_url: ${{ secrets.PREFECT_API_URL }}
          image_uri: ${{ env.IMAGE_URI }}
          gcp_creds_block_name: ${{ github.event.inputs.gcp_creds_block_name }}
          github_block_name: ${{ github.event.inputs.github_block_name }}
          cloudrun_block_name: ${{ github.event.inputs.cloudrun_block_name }}
          region: ${{ github.event.inputs.region }}
          gcp_credentials_json: ${{ secrets.GCP_CREDENTIALS }}

  build-flows:
    runs-on: ubuntu-latest
    needs: deploy-vm
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - id: set-matrix
        run: echo "matrix=$(ls flows/*.py | jq -R -s -c 'split("\n")[:-1]')" >> $GITHUB_OUTPUT

  deploy-flows:
    needs: build-flows
    runs-on: ubuntu-latest
    strategy:
      matrix:
        flows: ${{ fromJson(needs.build-flows.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3
      - id: flow
        run: |
          export FLOW_NAME=$(basename ${{ matrix.flows }} .py)
          echo "entrypoint=${{ matrix.flows }}:$FLOW_NAME" >> $GITHUB_OUTPUT
      - id: deploy
        uses: ./.github/actions/deploy-flows
        with:
          prefect_api_key: ${{ secrets.PREFECT_API_KEY }}
          prefect_api_url: ${{ secrets.PREFECT_API_URL }}
          flow_entrypoint: ${{ steps.flow.outputs.entrypoint }}
          deployment: ${{ github.event.inputs.deployment }}
          queue: ${{ github.event.inputs.queue }}
          github_block_name: github/${{ github.event.inputs.github_block_name }}
          cloudrun_block_name: cloud-run-job/${{ github.event.inputs.cloudrun_block_name }}
          gcp_credentials_json: ${{ secrets.GCP_CREDENTIALS }}
